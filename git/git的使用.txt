git clone -b br_Non-Commercial_AC-WANV3R2C00_Polkomtel380 git@rnd-isourceb.huawei.com:yWX373151/AC_BP_trunk_ac_bp_web.git

添加远程仓
git remote add trunk git@rnd-isourceb.huawei.com:AC_BP_trunk/ac_bp_web.git
git remote -v 查看远程仓信息
git remote show 查看本地定义的远程仓名
git remote show source 查看source远程仓与本地的信息

本地新建分支，并上传到远程仓上
git checkout -b new_local_br
此时git push失败，需要执行下面，在远程仓上也新建了分支，并与本地分支保持跟踪
git push --set-upstream origin new_remote_br
后面就可以直接git push

关联远程分支前，先提取fetch远程分支数据，在关联分支--set-upstream
git fetch origin br
git branch --set-upstream-to local_br origin/br (远程分支要存在，否则失败)

git fetch 远程仓 远程分支
git checkout -b 本地分支 远程仓/远程分支

git merge 本地另一分支
git checkout 本地另一分支 路径|文件名

如果只是简单的将feature分支的文件f.txt copy到master分支上；
git checkout master
git checkout feature f.tx

git stash list
git stash save "xxx"
git stash show
git stash apply stash@{0}
git stash drop stash@{0}

文件从暂存区回退到工作区
git reset HEAD  
回退文件，将文件从暂存区回退到工作区
git reset HEAD filename   
回退版本，一个^表示一个版本，可以多个，另外也可以使用 git reset HEAD～n这种形式
git reset HEAD^   
意为将版本库回退1个版本，但是不仅仅是将本地版本库的头指针全部重置到指定版本，也会重置暂存区，并且会将工作区代码也回退到这个版本
git reset --hard HEAD～1
意为将版本库软回退1个版本，所谓软回退表示将本地版本库的头指针全部重置到指定版本，且将这次提交之后的所有变更都移动到暂存区
git reset --soft HEAD～1 
